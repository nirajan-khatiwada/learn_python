                               list
->list support indexing and slicing
->list is same like string accept its mutabl character as explained below
->list can be nested eg:[[1,2,3],['a','b','c'],'d']

list declearation
variable=[data1,data2]                              eg:my_list=['nirajan','khatiwada','1000']


some built_in functions in list
len(list)                          ->used to find iteams of list         eg:my_list=['nirajan','khatiwada','1000']    len(my_list)   ->3


indexing and slicing is same like string




note:
the list is mutable but string is immutable 
eg:a=[1,2,5]             in string
   a[2]=3                a="123"
   print(a)               a[2]=3;
   output->               output->
   [1, 2, 3]              error


concat list
list1+list2....                           eg:first_list=[1,2,3]
                                             second_list=[4,5,6]
                                             final_list=first_list+second_list
                                              print(final_list)  ->[1, 2, 3, 4, 5, 6]

some function that changeits value (we no need to assign)=>doest return amy thing
add items on list on last             list.append(value)                        =>  a=[1,2,3]
                                                                               a.append(4)
                                                                               print(a)
                                                                               output=>[1, 2, 3, 4]  
remove iteam from list  from last    list.pop()                                =>a.pop()
                                                                               print(a)
                                                                               output=>[1,2,3]

remove iteam of random position      list.pop(index)                          a.pop(0)
                                                                              print(a)
                                                                              output=>[2,3]
to sort an list                      list.sort()                                a=[1,3,4,1,3]
                                                                                 a.sort()
                                                                               print(a)  =>[1,1,3,3,4]
to reverse string                   list.reverse()

to count no of element in list      list.count(element)                       eg:a=[1,1,2]    a.count(1)  print(a) output:2

to find index of element            list.index(element)                      eg:a=[1,1,2]    a.index(1)  print(a) output:0

to insert element in certion        list.insert(position,element)              a=[1,2]
position                                                                    >>> a.insert(1,"inserted") 
                                                                            >>> print(a)
                                                                                [1, 'inserted', 2]
to remove specific element        list.remove(element)                       a=[1,1,1]
                                                                             a.remove(1)
                                                                             print(a)               [1,1]

 




note(in case of pop)
variable=list.pop()                                                                print(variable)
                                                                                =>display the item which is reduced
                                                                                  print(list)
                                                                                =>display list whose last element is removed

                                                                                   



Notes:When you attempt to access data at an index that is out of range, an error will occur. For example, consider the list a = [1, 2, 3, 4, 5]. If you try to access an element at index 5 using a[5], it will result in an IndexError because the valid indices for this list are 0 through 4.



         
