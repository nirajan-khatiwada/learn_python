uuid                       =>to generate random id
from uuid import uuid4     =>2a43ad7d-a52a-4ba3-9080-c35fe2ce76c0
print(uuid4())
































Raising custom error

raise ValueError          =>to raise value error 



use cases:                ' 
a=9                                                             =>traceback (most recent call last):
if(a==9):                                                         File "C:\Users\niraj\Downloads\practise\main.py", line 3, in <module>
   raise ValueError("Value shouldnot be 9")                        raise ValueError("Value shouldnot be 9")
                                                                    ValueError: Value shouldnot be 9




try:                                                              =>Error
    a=9
    if(a==9):
        raise ValueError("Value shouldnot be 9")
except:
    print("Error")

is vs ==



























Learn that multi inheritance in oop
we can inheritant multiple class in oop
class Human(Man,SocialAnimal):


class Nirajan:
    def get_name(self,name):
        return name
    def print_name(self,name):
        return self.get_name(name)


nirajan=Nirajan()
print(nirajan.print_name("nirajan"))
output=>nirajan
ascessing function which is inside class from function inside the class






















Dicnatory Unpacking in python
=>dictionary unpacking is one of the important concept.

for example:
a={"name":"nirajan","class":12,"fav_sub":"Maths"}
**a  =>this is dictionary unpacking that is equal to name="nirajan","class"=12,fab_sub="Maths"


List Unpacking in python
=>list unpacking is one of the important concept.

for example:
a=["nirajan","khatiwada"]
*a  =>this is List unpacking that is equal to "nirajan","khatiwada"











Time

=>Python time.time() Function
                  In Python, the time() function returns the number of seconds passed since epoch (the point where time begins).
                  
                  For the Unix system, January 1, 1970, 00:00:00 at UTC is epoch.
                  
                  Let's see an example,
                  
                  # import the time module
                  import time
                  
                  # get the current time in seconds since the epoch
                  seconds = time.time()
                  
                  print("Seconds since epoch =", seconds)	
                  
                  # Output: Seconds since epoch = 1672214933.6804628

Python time.sleep() Function
                  The sleep() function suspends (delays) execution of the current thread for the given number of seconds.
                  
                  import time
                  
                  print("Printed immediately.")
                  time.sleep(2.4)
                  print("Printed after 2.4 seconds.")












timedate       =>to do date and time operation
               =>import datetime











=>datetime.datetime.now()          =>return today date with time for example


code example:
import datetime
x=datetime.datetime.now()
print(x)

output:
2024-03-28 12:17:20.118952

another:
import datetime
x=datetime.datetime.now()
print(x.year,x.month,x.day,x.hour,x.minute,x.second)
print(x.date())
print("\n")
print(x)

output:
2024 3 28 12 41 23
2024-03-28


2024-03-28 12:41:23.830177











to make datetime object
datetime.datetime(2020,10,20)          =>make date time object of 2020 10 20

example:
import datetime
x=datetime.datetime(2020,10,20) 
print(x.year,x.month,x.day,x.second)
print("\n")
print(x)


output:
2020 10 20 0


2020-10-20 00:00:00
































asyncio
import asyncio
import requests
async def download(url,save):
    fs=open(save,"wb")
    data=requests.get(url)

    fs.write(data.content)
    fs.close()

async def main():
    output=await asyncio.gather(download("https://images.pexels.com/photos/23221538/pexels-photo-23221538/free-photo-of-a-white-flower-with-green-leaves-in-the-dark.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1","lol.jpg"),download("https://images.pexels.com/photos/23221538/pexels-photo-23221538/free-photo-of-a-white-flower-with-green-leaves-in-the-dark.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1","2.jpg"))
    print(output)
    

asyncio.run(main())

print("sakkity")









single line and multiline comment 

#commet =>for single line comment
"""comment=>for multi line comment
comment"""

                                    


raw string in python
sorted function

                                    
                                    
